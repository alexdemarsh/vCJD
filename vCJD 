# Data ----
age.params <- read.table("/~/age-subset.csv", header=T, sep = ",")
    
# Function to compute probabilities by age ----
prob.age <- function (a, b) {
    pr <- vector("numeric", nrow(age.params))
    for (i in 1:nrow(age.params)) {
        row <- age.params[i,]
        pr[[i]] <- pgamma(q = a, shape = row$shape, scale= row$scale) - pgamma(q = b, shape = row$shape, scale = row$scale)
    }
    av.prob <- sum(pr)/length(pr)
    print(av.prob)
}

# Function to estimate CI of probability estimate ----
prob.age.CI <- function (a, b) {
    pr <- vector("numeric", nrow(age.params))    
    for (i in 1:nrow(age.params)) {
        row <- age.params[i,]
        pr[[i]] <- pgamma(q = a, shape = row$shape, scale= row$scale) - pgamma(q = b, shape = row$shape, scale = row$scale)
    }
    pr <- sort(pr)
    CI <- vector ("numeric", 2)
    CI[1] <- pr[50]
    CI[2] <- pr[1958]
    print(CI)
}

# Function to estimate CI of probability estimate when multiple periods covered ----
prob.age.CI.mult <- function (num.ranges, ranges){
    tot.pr <- matrix(nrow = nrow(age.params), ncol = num.ranges)
    for (i in 1:num.ranges){
        pr <- vector("numeric", nrow(age.params))
        for (j in 1:nrow(age.params)) {
            row <- age.params[j,]
            pr[[j]] <- pgamma(q = ranges[[i]][1], shape = row$shape, scale= row$scale) - 
                pgamma(q = ranges[[i]][2], shape = row$shape, scale = row$scale)
        }
        tot.pr[,i] <- pr
    }
    sum.pr <- rowSums(tot.pr)
    sorted.pr <- sort(sum.pr)
    CI <- vector ("numeric", 2)
    CI[1] <- sorted.pr[50]
    CI[2] <- sorted.pr[1958]
    print(CI)
}
